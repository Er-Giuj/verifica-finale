{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_input_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_input_11_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.altro = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.altro);\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Campo Richiesto\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Error:Campo Richiesto\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.datiAnagrafici = true;\n    this.percorsoStudi = false;\n    this.esperienzeLavorative = false;\n    this.nome = '';\n    this.altro = '';\n  }\n  ngOnInit() {}\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 38,\n  vars: 9,\n  consts: [[\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"accordion-item\"], [1, \"accordion-header\"], [\"type\", \"button\", 1, \"accordion-button\"], [\"id\", \"collapseOne\", 1, \"accordion-collapse\", \"collapse\"], [1, \"accordion-body\"], [\"type\", \"text\", \"name\", \"nome\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"100\", 3, \"ngModel\", \"ngModelChange\"], [\"pippo\", \"ngModel\"], [\"type\", \"text\", \"name\", \"altro\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseTwo\", 1, \"accordion-button\"], [\"id\", \"collapseTwo\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseThree\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"type\", \"text\", \"name\", \"altro\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"h2\", 2)(5, \"button\", 3);\n      i0.ɵɵtext(6, \" Dati anagrafici \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, AppComponent_input_11_Template, 1, 1, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AppComponent_div_12_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(13, AppComponent_div_13_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 1)(15, \"h2\", 2)(16, \"button\", 10);\n      i0.ɵɵtext(17, \" Percorso di studi \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 11)(19, \"div\", 5)(20, \"strong\");\n      i0.ɵɵtext(21, \"This is the second item's accordion body.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n      i0.ɵɵelementStart(23, \"code\");\n      i0.ɵɵtext(24, \".accordion-body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \", though the transition does limit overflow. \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 1)(27, \"h2\", 2)(28, \"button\", 12);\n      i0.ɵɵtext(29, \" Esperienze lavorative \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 13)(31, \"div\", 5)(32, \"strong\");\n      i0.ɵɵtext(33, \"This is the third item's accordion body.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n      i0.ɵɵelementStart(35, \"code\");\n      i0.ɵɵtext(36, \".accordion-body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \", though the transition does limit overflow. \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Pasella \", ctx.nome, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"collapsed\", ctx.datiAnagrafici);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"show\", ctx.datiAnagrafici);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.nome);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.nome.length > 5);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !_r0.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","AppComponent_input_11_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","altro","ɵɵelementEnd","ɵɵproperty","ctx_r1","ɵɵtext","AppComponent","constructor","datiAnagrafici","percorsoStudi","esperienzeLavorative","nome","ngOnInit","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_input_ngModelChange_9_listener","ɵɵtemplate","AppComponent_input_11_Template","AppComponent_div_12_Template","AppComponent_div_13_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵclassProp","length","_r0","invalid"],"sources":["C:\\Users\\silba\\Desktop\\Angular\\es-2\\src\\app\\app.component.ts","C:\\Users\\silba\\Desktop\\Angular\\es-2\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  datiAnagrafici = true;\n  percorsoStudi = false;\n  esperienzeLavorative = false;\n  nome='';\n  altro='';\n  constructor() {}\n\n  ngOnInit(): void {\n   \n  };\n  \n\n  // toggleSezione(nomeSezione: string) {\n  //   this.datiAnagrafici = false;\n  //   this.percorsoStudi = false;\n  //   this.esperienzeLavorative = false;\n\n  //   if(nomeSezione === 'datiAnagrafici') {\n  //     this.datiAnagrafici = true;\n  //   } else  if(nomeSezione === 'percorsoStudi') {\n  //     this.percorsoStudi = true;\n  //   } else if(nomeSezione === 'esperienzaLavorative') {\n  //     this.esperienzeLavorative = true;\n  //   }\n  // }\n\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://angular.io/license\n*/","<h1>Pasella {{nome}}</h1>\n<div class=\"accordion\" id=\"accordionExample\">\n\n\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      <button class=\"accordion-button\" type=\"button\"\n          [class.collapsed]=\"datiAnagrafici\"><!-- creare un componente con valore -> \"datianagrafici\" -->\n            Dati anagrafici\n      </button>\n    </h2>\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse\" \n        [class.show]=\"datiAnagrafici\">\n      <div class=\"accordion-body\">\n        <input type=\"text\" \n          [(ngModel)]=\"nome\"\n          #pippo=\"ngModel\" \n          name=\"nome\"\n          required\n          minlength=\"3\"\n          maxlength=\"100\">\n        <!-- #nome=\"ngModel\" => let pippo = ngModel-->  \n        <input type=\"text\" \n          [(ngModel)]=\"altro\" \n          name=\"altro\"\n          *ngIf=\"nome.length > 5\"\n          required>\n      </div>\n      <div *ngIf=\"!pippo.invalid\">Campo Richiesto</div>\n      <div *ngIf=\"pippo.invalid\">Error:Campo Richiesto</div>\n    </div>\n  </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n        Percorso di studi\n      </button>\n    </h2>\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n      <div class=\"accordion-body\">\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n        Esperienze lavorative\n      </button>\n    </h2>\n    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n      <div class=\"accordion-body\">\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
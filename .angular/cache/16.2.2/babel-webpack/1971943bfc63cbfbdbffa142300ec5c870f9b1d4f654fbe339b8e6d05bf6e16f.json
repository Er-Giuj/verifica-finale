{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet HomeComponent = class HomeComponent {\n  constructor(http, meteoService, route) {\n    this.http = http;\n    this.meteoService = meteoService;\n    this.route = route;\n    this.lat = \"\";\n    this.lon = \"\";\n    this.id = \"\";\n    this.info = [];\n  }\n  searchCoord() {}\n  ngOnInit() {\n    // raccoglie il parametro e lo assegna a id,se id è null porta alla pagina principale\n    // this.route.paramMap.subscribe((param: ParamMap) => {\n    //   this.id = param.get(\"id\") as string; //conversione implicità per evitare che il programma possa prendere altre tipologie oltre lo string\n    //   if (this.id === null) {\n    //     this.letter = \"a\";\n    //   } else {\n    //     this.letter = this.id;\n    //     // stampa del sito appena eseguito il primo accesso al sito(o refresh)\n    //     this.DrinkService.getInfoCity(this.letter).subscribe(\n    //       (response: any) => {\n    //         this.drinks = response.drinks;\n    //       }\n    //     );\n    //   }\n    // });\n    // stampa del sito appena eseguito il primo accesso al sito(o refresh)\n    // this.DrinkService.getElencoDrinks(this.letter).subscribe(\n    //   (response: any) => {\n    //     this.drinks = response.drinks;\n    //   }\n    // );\n    this.meteoService.getInfoCity(this.lon, this.lat).subscribe(response => {\n      this.info = response;\n      console.log(this.info);\n    });\n    this.searchCoord();\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})], HomeComponent);\nexport { HomeComponent };\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","map":{"version":3,"names":["Component","HomeComponent","constructor","http","meteoService","route","lat","lon","id","info","searchCoord","ngOnInit","getInfoCity","subscribe","response","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\silba\\Desktop\\Angular\\verifica-finale\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MeteoService } from \"../_services/meteo.service\";\nimport {\n  ActivatedRoute,\n  ParamMap,\n  RouterModule,\n  Routes,\n} from \"@angular/router\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n})\nexport class HomeComponent implements OnInit {\n  lat: string = \"\";\n  lon: string = \"\";\n  id: string = \"\";\n  info: any = [];\n  constructor(\n    private http: HttpClient,\n    private meteoService: MeteoService,\n    private route: ActivatedRoute\n  ) {}\n  searchCoord() {}\n  ngOnInit(): void {\n    // raccoglie il parametro e lo assegna a id,se id è null porta alla pagina principale\n    // this.route.paramMap.subscribe((param: ParamMap) => {\n    //   this.id = param.get(\"id\") as string; //conversione implicità per evitare che il programma possa prendere altre tipologie oltre lo string\n    //   if (this.id === null) {\n    //     this.letter = \"a\";\n    //   } else {\n    //     this.letter = this.id;\n    //     // stampa del sito appena eseguito il primo accesso al sito(o refresh)\n    //     this.DrinkService.getInfoCity(this.letter).subscribe(\n    //       (response: any) => {\n    //         this.drinks = response.drinks;\n    //       }\n    //     );\n    //   }\n    // });\n    // stampa del sito appena eseguito il primo accesso al sito(o refresh)\n    // this.DrinkService.getElencoDrinks(this.letter).subscribe(\n    //   (response: any) => {\n    //     this.drinks = response.drinks;\n    //   }\n    // );\n    this.meteoService\n      .getInfoCity(this.lon, this.lat)\n      .subscribe((response: any) => {\n        this.info = response;\n        console.log(this.info);\n      });\n    this.searchCoord();\n  }\n}\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://angular.io/license\n*/\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAe1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YACUC,IAAgB,EAChBC,YAA0B,EAC1BC,KAAqB;IAFrB,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IAPf,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,EAAE,GAAW,EAAE;IACf,KAAAC,IAAI,GAAQ,EAAE;EAKX;EACHC,WAAWA,CAAA,GAAI;EACfC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACP,YAAY,CACdQ,WAAW,CAAC,IAAI,CAACL,GAAG,EAAE,IAAI,CAACD,GAAG,CAAC,CAC/BO,SAAS,CAAEC,QAAa,IAAI;MAC3B,IAAI,CAACL,IAAI,GAAGK,QAAQ;MACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,IAAI,CAAC;IACxB,CAAC,CAAC;IACJ,IAAI,CAACC,WAAW,EAAE;EACpB;CACD;AAzCYT,aAAa,GAAAgB,UAAA,EALzBjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWnB,aAAa,CAyCzB;SAzCYA,aAAa;AA2C1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}